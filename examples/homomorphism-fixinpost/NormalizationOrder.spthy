theory NormalzationOrder
begin

builtins: homomorphic-encryption

rule GenKey:
  [ Fr(~k) ]
  --[]->
  [ !Key(~k) ]

rule SendMessage:
  [ Fr(~m1), Fr(~m2), !Key(k) ]
  --[ SecretS(<~m1, ~m2>) ]->
  [ Out( hdec(<henc(~m1, k), henc(~m2, k)>, k) ) ]

rule SendMessage2:
  [ Fr(~m1), Fr(~m2), !Key(k) ]
  --[ SecretS2(<~m1, ~m2>) ]->
  [ Out( hdec(henc(<~m1, ~m2>, k), k) ) ]

rule ReceiveMessage:
  [ In(m) ]
  --[ SecretR(m) ]->
  []

lemma SendAndReceive: exists-trace 
  "Ex m #i #j. SecretS(m) @i & SecretR(m) @j"

lemma SendAndReceive2: exists-trace 
  "Ex m #i #j. SecretS2(m) @i & SecretR(m) @j"

end