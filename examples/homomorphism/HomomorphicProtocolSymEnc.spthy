theory HomomorphicProtocolSymmetricEnryption
begin

builtins: symmetric-encryption, homomorphic-encryption
functions: succ/1

// Trivial homomorphic protocol to show that the unification algorithm works

rule GetKey:
  [ Fr(~key) ]
  --[]->
  [ Init($A, $B, ~key), Resp($B, $A, ~key) ]

rule A_1:
  [ Fr(~NA)
  , Init($A, $B, key) ]
  --[]->
  [ Out(senc(<$A, ~NA>, key))
  , A_1_State($A, $B, key, ~NA) ]

rule B_1:
  [ Resp($B, $A, key) 
  , In(senc(<$A, NA>, key)) ]
  --[ SecretKey($B, NA) ]->
  [ Out(senc(<$B, succ(NA)>, key)) ]

rule A_2:
  [ A_1_State($A, $B, key, ~NA)
  , In(senc(<$B, succ(~NA)>, key)) ]
  --[ SecretKey($A, ~NA) ]->
  []

lemma Secret_Shared_Key: 
  "All agent key #i. SecretKey(agent, key) @i ==> (not (Ex #t. K(key) @t))"

end