theory PairTest
begin

builtins: homomorphic-encryption

rule CreateMessage:
  [ Fr(~msg) ]
  --[]->
  [ Out(~msg) ]

rule ReceiveMessagePair:
  [ In(<msg1,msg2>) ]
  --[ ReceivedPair(msg1, msg2) ]->
  []

rule ReceiveMessageHPair:
  [ In(hpair(msg1,msg2))]
  --[ ReceivedHPair(msg1, msg2) ]->
  []

lemma All_ReceivedPair_KU:
  "All m1 m2 #i. ReceivedPair(m1, m2) @i ==> (Ex #t1 #t2. KU(m1) @t1 & KU(m2) @t2)"

lemma All_ReceivedPair_K:
  "All m1 m2 #i. ReceivedPair(m1, m2) @i ==> (Ex #t1 #t2. K(m1) @t1 & K(m2) @t2)"

lemma All_ReceivedHPair_KU:
  "All m1 m2 #i. ReceivedHPair(m1, m2) @i ==> (Ex #t1 #t2. KU(m1) @t1 & KU(m2) @t2)"

lemma All_ReceivedHPair_K:
  "All m1 m2 #i. ReceivedHPair(m1, m2) @i ==> (Ex #t1 #t2. K(m1) @t1 & K(m2) @t2)"

end